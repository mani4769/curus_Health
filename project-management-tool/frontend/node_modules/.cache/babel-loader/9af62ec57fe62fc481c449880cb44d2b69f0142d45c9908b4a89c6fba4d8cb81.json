{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\nconsole.log('游댢 API Base URL:', API_BASE_URL);\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Handle token expiration\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const authAPI = {\n  login: data => {\n    console.log('游니 Making login request to:', `${API_BASE_URL}/api/auth/login`, 'with data:', data);\n    return api.post('/api/auth/login', data).then(res => {\n      console.log('游니 Login response:', res.data);\n      return res.data;\n    });\n  },\n  signup: data => api.post('/api/auth/signup', data).then(res => res.data)\n};\nexport const userAPI = {\n  getUsers: () => api.get('/api/users').then(res => res.data),\n  getProfile: () => api.get('/api/users/profile').then(res => res.data),\n  updateUser: (id, data) => api.put(`/api/users/${id}`, data).then(res => res.data),\n  deleteUser: id => api.delete(`/api/users/${id}`).then(res => res.data)\n};\nexport const projectAPI = {\n  getProjects: () => api.get('/api/projects').then(res => res.data),\n  getProject: id => api.get(`/api/projects/${id}`).then(res => res.data),\n  createProject: data => api.post('/api/projects', data).then(res => res.data),\n  updateProject: (id, data) => api.put(`/api/projects/${id}`, data).then(res => res.data),\n  deleteProject: id => api.delete(`/api/projects/${id}`).then(res => res.data),\n  addTeamMember: (projectId, userId) => api.post(`/api/projects/${projectId}/team`, {\n    user_id: userId\n  }).then(res => res.data),\n  removeTeamMember: (projectId, userId) => api.delete(`/api/projects/${projectId}/team/${userId}`).then(res => res.data)\n};\nexport const taskAPI = {\n  getTasks: params => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return api.get(`/api/tasks${queryString}`).then(res => res.data);\n  },\n  getTask: id => api.get(`/api/tasks/${id}`).then(res => res.data),\n  createTask: data => api.post('/api/tasks', data).then(res => res.data),\n  updateTask: (id, data) => api.put(`/api/tasks/${id}`, data).then(res => res.data),\n  updateTaskStatus: (id, status) => api.patch(`/api/tasks/${id}/status`, {\n    status\n  }).then(res => res.data),\n  addComment: (id, comment) => api.post(`/api/tasks/${id}/comments`, {\n    comment\n  }).then(res => res.data),\n  deleteTask: id => api.delete(`/api/tasks/${id}`).then(res => res.data)\n};\nexport const reportAPI = {\n  getTasksByStatus: () => api.get('/api/reports/tasks-by-status').then(res => res.data),\n  getOverdueTasks: () => api.get('/api/reports/overdue-tasks').then(res => res.data),\n  getDashboard: () => api.get('/api/reports/dashboard').then(res => res.data),\n  getUserWorkload: () => api.get('/api/reports/user-workload').then(res => res.data)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","console","log","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","data","post","then","res","signup","userAPI","getUsers","get","getProfile","updateUser","id","put","deleteUser","delete","projectAPI","getProjects","getProject","createProject","updateProject","deleteProject","addTeamMember","projectId","userId","user_id","removeTeamMember","taskAPI","getTasks","params","queryString","URLSearchParams","toString","getTask","createTask","updateTask","updateTaskStatus","patch","addComment","comment","deleteTask","reportAPI","getTasksByStatus","getOverdueTasks","getDashboard","getUserWorkload"],"sources":["C:/Users/manimaddy/curus_Health/curus_Health/project-management-tool/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { LoginData, SignupData, AuthResponse } from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '';\r\n\r\nconsole.log('游댢 API Base URL:', API_BASE_URL);\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if available\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Handle token expiration\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const authAPI = {\r\n  login: (data: LoginData): Promise<AuthResponse> => {\r\n    console.log('游니 Making login request to:', `${API_BASE_URL}/api/auth/login`, 'with data:', data);\r\n    return api.post('/api/auth/login', data).then(res => {\r\n      console.log('游니 Login response:', res.data);\r\n      return res.data;\r\n    });\r\n  },\r\n  \r\n  signup: (data: SignupData) =>\r\n    api.post('/api/auth/signup', data).then(res => res.data),\r\n};\r\n\r\nexport const userAPI = {\r\n  getUsers: () => api.get('/api/users').then(res => res.data),\r\n  getProfile: () => api.get('/api/users/profile').then(res => res.data),\r\n  updateUser: (id: string, data: any) => \r\n    api.put(`/api/users/${id}`, data).then(res => res.data),\r\n  deleteUser: (id: string) => \r\n    api.delete(`/api/users/${id}`).then(res => res.data),\r\n};\r\n\r\nexport const projectAPI = {\r\n  getProjects: () => api.get('/api/projects').then(res => res.data),\r\n  getProject: (id: string) => api.get(`/api/projects/${id}`).then(res => res.data),\r\n  createProject: (data: any) => api.post('/api/projects', data).then(res => res.data),\r\n  updateProject: (id: string, data: any) => \r\n    api.put(`/api/projects/${id}`, data).then(res => res.data),\r\n  deleteProject: (id: string) => \r\n    api.delete(`/api/projects/${id}`).then(res => res.data),\r\n  addTeamMember: (projectId: string, userId: string) =>\r\n    api.post(`/api/projects/${projectId}/team`, { user_id: userId }).then(res => res.data),\r\n  removeTeamMember: (projectId: string, userId: string) =>\r\n    api.delete(`/api/projects/${projectId}/team/${userId}`).then(res => res.data),\r\n};\r\n\r\nexport const taskAPI = {\r\n  getTasks: (params?: any) => {\r\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\r\n    return api.get(`/api/tasks${queryString}`).then(res => res.data);\r\n  },\r\n  getTask: (id: string) => api.get(`/api/tasks/${id}`).then(res => res.data),\r\n  createTask: (data: any) => api.post('/api/tasks', data).then(res => res.data),\r\n  updateTask: (id: string, data: any) => \r\n    api.put(`/api/tasks/${id}`, data).then(res => res.data),\r\n  updateTaskStatus: (id: string, status: string) =>\r\n    api.patch(`/api/tasks/${id}/status`, { status }).then(res => res.data),\r\n  addComment: (id: string, comment: string) =>\r\n    api.post(`/api/tasks/${id}/comments`, { comment }).then(res => res.data),\r\n  deleteTask: (id: string) => \r\n    api.delete(`/api/tasks/${id}`).then(res => res.data),\r\n};\r\n\r\nexport const reportAPI = {\r\n  getTasksByStatus: () => api.get('/api/reports/tasks-by-status').then(res => res.data),\r\n  getOverdueTasks: () => api.get('/api/reports/overdue-tasks').then(res => res.data),\r\n  getDashboard: () => api.get('/api/reports/dashboard').then(res => res.data),\r\n  getUserWorkload: () => api.get('/api/reports/user-workload').then(res => res.data),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}