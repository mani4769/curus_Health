{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manimaddy\\\\curus_Health\\\\curus_Health\\\\project-management-tool\\\\frontend\\\\src\\\\pages\\\\AITools.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, TextField, Button, Card, CardContent, List, ListItem, ListItemText, Chip, FormControlLabel, Checkbox, Select, MenuItem, FormControl, InputLabel, Alert, CircularProgress, Grid } from '@mui/material';\nimport { SmartToy, AutoStories, AddTask, Psychology } from '@mui/icons-material';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AITools = () => {\n  _s();\n  const [projectDescription, setProjectDescription] = useState('');\n  const [selectedProject, setSelectedProject] = useState('');\n  const [createTasks, setCreateTasks] = useState(false);\n  const [userStories, setUserStories] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    fetchProjects();\n  }, []);\n  const fetchProjects = async () => {\n    try {\n      const response = await api.get('/api/projects');\n      setProjects(response.data);\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n    }\n  };\n  const handleGenerateStories = async () => {\n    if (!projectDescription.trim()) {\n      setError('Please enter a project description');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    setUserStories([]);\n    try {\n      const response = await api.post('/api/ai/generate-user-stories', {\n        projectDescription: projectDescription.trim(),\n        projectId: selectedProject || undefined,\n        createTasks\n      });\n      setUserStories(response.data.user_stories);\n      setSuccess(`Generated ${response.data.count} user stories successfully!`);\n      if (createTasks && response.data.count > 0) {\n        setSuccess(prev => prev + ' Tasks have been created automatically.');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error generating user stories:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to generate user stories. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClear = () => {\n    setProjectDescription('');\n    setSelectedProject('');\n    setCreateTasks(false);\n    setUserStories([]);\n    setError('');\n    setSuccess('');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        color: 'white',\n        fontWeight: 'bold',\n        textShadow: '2px 2px 4px rgba(0,0,0,0.3)',\n        textAlign: 'center',\n        mb: 4\n      },\n      children: \"\\uD83E\\uDD16 AI-Powered User Story Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            background: 'rgba(255, 255, 255, 0.95)',\n            backdropFilter: 'blur(10px)',\n            borderRadius: 3,\n            boxShadow: '0 8px 32px rgba(0,0,0,0.1)',\n            transition: 'transform 0.3s ease-in-out',\n            '&:hover': {\n              transform: 'translateY(-5px)',\n              boxShadow: '0 12px 40px rgba(0,0,0,0.2)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Psychology, {\n                sx: {\n                  mr: 1,\n                  color: 'primary.main'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: \"Generate User Stories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Project Description\",\n              multiline: true,\n              rows: 6,\n              fullWidth: true,\n              value: projectDescription,\n              onChange: e => setProjectDescription(e.target.value),\n              placeholder: \"Describe your project in plain English. For example: 'An ecommerce website where customers can browse products, add to cart, and make payments online. Admin should manage products and view orders.'\",\n              sx: {\n                mb: 2,\n                '& .MuiOutlinedInput-root': {\n                  background: 'rgba(255,255,255,0.8)',\n                  borderRadius: 2\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Link to Project (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedProject,\n                label: \"Link to Project (Optional)\",\n                onChange: e => setSelectedProject(e.target.value),\n                sx: {\n                  background: 'rgba(255,255,255,0.8)',\n                  borderRadius: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this), projects.map(project => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: project._id,\n                  children: project.name\n                }, project._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: createTasks,\n                onChange: e => setCreateTasks(e.target.checked),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this),\n              label: \"Automatically create tasks from user stories\",\n              sx: {\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              gap: 2,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleGenerateStories,\n                disabled: loading,\n                startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 40\n                }, this) : /*#__PURE__*/_jsxDEV(SmartToy, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 73\n                }, this),\n                sx: {\n                  background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n                  boxShadow: '0 3px 5px 2px rgba(33, 150, 243, .3)',\n                  '&:hover': {\n                    background: 'linear-gradient(45deg, #2196F3 60%, #21CBF3 100%)'\n                  }\n                },\n                children: loading ? 'Generating...' : 'Generate Stories'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: handleClear,\n                disabled: loading,\n                sx: {\n                  borderColor: 'rgba(255,255,255,0.3)',\n                  color: 'white',\n                  '&:hover': {\n                    borderColor: 'white',\n                    background: 'rgba(255,255,255,0.1)'\n                  }\n                },\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              sx: {\n                mt: 2\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"success\",\n              sx: {\n                mt: 2\n              },\n              children: success\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            background: 'rgba(255, 255, 255, 0.95)',\n            backdropFilter: 'blur(10px)',\n            borderRadius: 3,\n            boxShadow: '0 8px 32px rgba(0,0,0,0.1)',\n            transition: 'transform 0.3s ease-in-out',\n            '&:hover': {\n              transform: 'translateY(-5px)',\n              boxShadow: '0 12px 40px rgba(0,0,0,0.2)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(AutoStories, {\n                sx: {\n                  mr: 1,\n                  color: 'secondary.main'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: \"Generated User Stories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), userStories.length > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${userStories.length} stories`,\n                color: \"primary\",\n                size: \"small\",\n                sx: {\n                  ml: 'auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), userStories.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              sx: {\n                py: 4,\n                color: 'text.secondary'\n              },\n              children: [/*#__PURE__*/_jsxDEV(SmartToy, {\n                sx: {\n                  fontSize: 48,\n                  mb: 2,\n                  opacity: 0.5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                textAlign: \"center\",\n                children: \"Enter a project description and click \\\"Generate Stories\\\" to see AI-generated user stories here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(List, {\n              sx: {\n                maxHeight: 400,\n                overflow: 'auto'\n              },\n              children: userStories.map((story, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                divider: true,\n                sx: {\n                  borderRadius: 2,\n                  mb: 1,\n                  background: 'rgba(33, 150, 243, 0.05)',\n                  '&:hover': {\n                    background: 'rgba(33, 150, 243, 0.1)'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body1\",\n                    sx: {\n                      fontWeight: 500\n                    },\n                    children: story\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 27\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    mt: 1,\n                    children: [/*#__PURE__*/_jsxDEV(AddTask, {\n                      sx: {\n                        mr: 0.5,\n                        fontSize: 16\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      children: [\"Story \", index + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3,\n        background: 'rgba(255, 255, 255, 0.95)',\n        backdropFilter: 'blur(10px)',\n        borderRadius: 3,\n        boxShadow: '0 8px 32px rgba(0,0,0,0.1)'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            fontWeight: 'bold',\n            color: '#333'\n          },\n          children: \"\\uD83D\\uDCA1 How It Works\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: \"This AI-powered tool uses GROQ's fast inference API with the Mixtral language model to generate detailed user stories from your project descriptions. Each story follows the standard format: \\\"As a [role], I want to [action], so that [benefit].\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Features:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), \" Link stories to projects, automatically create tasks, cinematic UI with smooth animations.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(AITools, \"gc+dH30isYuAmbj+Ka0qzj4PRzk=\");\n_c = AITools;\nexport default AITools;\nvar _c;\n$RefreshReg$(_c, \"AITools\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","Card","CardContent","List","ListItem","ListItemText","Chip","FormControlLabel","Checkbox","Select","MenuItem","FormControl","InputLabel","Alert","CircularProgress","Grid","SmartToy","AutoStories","AddTask","Psychology","api","jsxDEV","_jsxDEV","AITools","_s","projectDescription","setProjectDescription","selectedProject","setSelectedProject","createTasks","setCreateTasks","userStories","setUserStories","projects","setProjects","loading","setLoading","error","setError","success","setSuccess","fetchProjects","response","get","data","console","handleGenerateStories","trim","post","projectId","undefined","user_stories","count","prev","_error$response","_error$response$data","handleClear","sx","minHeight","background","p","children","variant","gutterBottom","color","fontWeight","textShadow","textAlign","mb","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","backdropFilter","borderRadius","boxShadow","transition","transform","display","alignItems","mr","label","multiline","rows","fullWidth","value","onChange","e","target","placeholder","map","project","_id","name","control","checked","gap","onClick","disabled","startIcon","size","borderColor","severity","mt","length","ml","flexDirection","justifyContent","py","fontSize","opacity","maxHeight","overflow","story","index","divider","primary","secondary","paragraph","_c","$RefreshReg$"],"sources":["C:/Users/manimaddy/curus_Health/curus_Health/project-management-tool/frontend/src/pages/AITools.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Chip,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Alert,\r\n  CircularProgress,\r\n  Grid,\r\n} from '@mui/material';\r\nimport {\r\n  SmartToy,\r\n  AutoStories,\r\n  AddTask,\r\n  Psychology,\r\n} from '@mui/icons-material';\r\nimport { Project } from '../types';\r\nimport api from '../services/api';\r\n\r\nconst AITools: React.FC = () => {\r\n  const [projectDescription, setProjectDescription] = useState('');\r\n  const [selectedProject, setSelectedProject] = useState('');\r\n  const [createTasks, setCreateTasks] = useState(false);\r\n  const [userStories, setUserStories] = useState<string[]>([]);\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await api.get('/api/projects');\r\n      setProjects(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching projects:', error);\r\n    }\r\n  };\r\n\r\n  const handleGenerateStories = async () => {\r\n    if (!projectDescription.trim()) {\r\n      setError('Please enter a project description');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n    setUserStories([]);\r\n\r\n    try {\r\n      const response = await api.post('/api/ai/generate-user-stories', {\r\n        projectDescription: projectDescription.trim(),\r\n        projectId: selectedProject || undefined,\r\n        createTasks,\r\n      });\r\n\r\n      setUserStories(response.data.user_stories);\r\n      setSuccess(`Generated ${response.data.count} user stories successfully!`);\r\n\r\n      if (createTasks && response.data.count > 0) {\r\n        setSuccess(prev => prev + ' Tasks have been created automatically.');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error generating user stories:', error);\r\n      setError(error.response?.data?.error || 'Failed to generate user stories. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setProjectDescription('');\r\n    setSelectedProject('');\r\n    setCreateTasks(false);\r\n    setUserStories([]);\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  return (\r\n    <Box sx={{\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n      p: 3\r\n    }}>\r\n      <Typography variant=\"h4\" gutterBottom sx={{\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        textShadow: '2px 2px 4px rgba(0,0,0,0.3)',\r\n        textAlign: 'center',\r\n        mb: 4\r\n      }}>\r\n        🤖 AI-Powered User Story Generator\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Input Section */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card sx={{\r\n            background: 'rgba(255, 255, 255, 0.95)',\r\n            backdropFilter: 'blur(10px)',\r\n            borderRadius: 3,\r\n            boxShadow: '0 8px 32px rgba(0,0,0,0.1)',\r\n            transition: 'transform 0.3s ease-in-out',\r\n            '&:hover': {\r\n              transform: 'translateY(-5px)',\r\n              boxShadow: '0 12px 40px rgba(0,0,0,0.2)'\r\n            }\r\n          }}>\r\n            <CardContent>\r\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                <Psychology sx={{ mr: 1, color: 'primary.main' }} />\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n                  Generate User Stories\r\n                </Typography>\r\n              </Box>\r\n\r\n              <TextField\r\n                label=\"Project Description\"\r\n                multiline\r\n                rows={6}\r\n                fullWidth\r\n                value={projectDescription}\r\n                onChange={(e) => setProjectDescription(e.target.value)}\r\n                placeholder=\"Describe your project in plain English. For example: 'An ecommerce website where customers can browse products, add to cart, and make payments online. Admin should manage products and view orders.'\"\r\n                sx={{\r\n                  mb: 2,\r\n                  '& .MuiOutlinedInput-root': {\r\n                    background: 'rgba(255,255,255,0.8)',\r\n                    borderRadius: 2\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <FormControl fullWidth sx={{ mb: 2 }}>\r\n                <InputLabel>Link to Project (Optional)</InputLabel>\r\n                <Select\r\n                  value={selectedProject}\r\n                  label=\"Link to Project (Optional)\"\r\n                  onChange={(e) => setSelectedProject(e.target.value)}\r\n                  sx={{\r\n                    background: 'rgba(255,255,255,0.8)',\r\n                    borderRadius: 2\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {projects.map((project) => (\r\n                    <MenuItem key={project._id} value={project._id}>\r\n                      {project.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={createTasks}\r\n                    onChange={(e) => setCreateTasks(e.target.checked)}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Automatically create tasks from user stories\"\r\n                sx={{ mb: 2 }}\r\n              />\r\n\r\n              <Box display=\"flex\" gap={2}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={handleGenerateStories}\r\n                  disabled={loading}\r\n                  startIcon={loading ? <CircularProgress size={20} /> : <SmartToy />}\r\n                  sx={{\r\n                    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n                    boxShadow: '0 3px 5px 2px rgba(33, 150, 243, .3)',\r\n                    '&:hover': {\r\n                      background: 'linear-gradient(45deg, #2196F3 60%, #21CBF3 100%)',\r\n                    }\r\n                  }}\r\n                >\r\n                  {loading ? 'Generating...' : 'Generate Stories'}\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={handleClear}\r\n                  disabled={loading}\r\n                  sx={{\r\n                    borderColor: 'rgba(255,255,255,0.3)',\r\n                    color: 'white',\r\n                    '&:hover': {\r\n                      borderColor: 'white',\r\n                      background: 'rgba(255,255,255,0.1)'\r\n                    }\r\n                  }}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </Box>\r\n\r\n              {error && (\r\n                <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n                  {error}\r\n                </Alert>\r\n              )}\r\n\r\n              {success && (\r\n                <Alert severity=\"success\" sx={{ mt: 2 }}>\r\n                  {success}\r\n                </Alert>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Output Section */}\r\n        <Grid item xs={12} md={6}>\r\n          <Card sx={{\r\n            background: 'rgba(255, 255, 255, 0.95)',\r\n            backdropFilter: 'blur(10px)',\r\n            borderRadius: 3,\r\n            boxShadow: '0 8px 32px rgba(0,0,0,0.1)',\r\n            transition: 'transform 0.3s ease-in-out',\r\n            '&:hover': {\r\n              transform: 'translateY(-5px)',\r\n              boxShadow: '0 12px 40px rgba(0,0,0,0.2)'\r\n            }\r\n          }}>\r\n            <CardContent>\r\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                <AutoStories sx={{ mr: 1, color: 'secondary.main' }} />\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 'bold' }}>\r\n                  Generated User Stories\r\n                </Typography>\r\n                {userStories.length > 0 && (\r\n                  <Chip\r\n                    label={`${userStories.length} stories`}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    sx={{ ml: 'auto' }}\r\n                  />\r\n                )}\r\n              </Box>\r\n\r\n              {userStories.length === 0 ? (\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDirection=\"column\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                  sx={{ py: 4, color: 'text.secondary' }}\r\n                >\r\n                  <SmartToy sx={{ fontSize: 48, mb: 2, opacity: 0.5 }} />\r\n                  <Typography variant=\"body1\" textAlign=\"center\">\r\n                    Enter a project description and click \"Generate Stories\" to see AI-generated user stories here.\r\n                  </Typography>\r\n                </Box>\r\n              ) : (\r\n                <List sx={{ maxHeight: 400, overflow: 'auto' }}>\r\n                  {userStories.map((story, index) => (\r\n                    <ListItem key={index} divider sx={{\r\n                      borderRadius: 2,\r\n                      mb: 1,\r\n                      background: 'rgba(33, 150, 243, 0.05)',\r\n                      '&:hover': {\r\n                        background: 'rgba(33, 150, 243, 0.1)'\r\n                      }\r\n                    }}>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                            {story}\r\n                          </Typography>\r\n                        }\r\n                        secondary={\r\n                          <Box display=\"flex\" alignItems=\"center\" mt={1}>\r\n                            <AddTask sx={{ mr: 0.5, fontSize: 16 }} />\r\n                            <Typography variant=\"caption\" color=\"text.secondary\">\r\n                              Story {index + 1}\r\n                            </Typography>\r\n                          </Box>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Info Section */}\r\n      <Card sx={{\r\n        mt: 3,\r\n        background: 'rgba(255, 255, 255, 0.95)',\r\n        backdropFilter: 'blur(10px)',\r\n        borderRadius: 3,\r\n        boxShadow: '0 8px 32px rgba(0,0,0,0.1)'\r\n      }}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: '#333' }}>\r\n            💡 How It Works\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n            This AI-powered tool uses GROQ's fast inference API with the Mixtral language model to generate detailed user stories from your project descriptions. Each story follows the standard format: \"As a [role], I want to [action], so that [benefit].\"\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            <strong>Features:</strong> Link stories to projects, automatically create tasks, cinematic UI with smooth animations.\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AITools;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}